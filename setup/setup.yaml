- name: Setting up desktop environment
  hosts: localhost
  tasks:
    - name: Installing ZSH
      become: yes
      apt:
        name:
          - zsh
          - git
          - curl

    - name: Fetching oh-my-zsh
      uri:
        url: https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        return_content: yes
      register: omz_install

    - name: Installing oh-my-zsh
      shell:
        cmd: sh
        stdin: '{{ omz_install.content }}'

    - name: Fetching oh-my-zsh configuration from git
      get_url:
        url: https://raw.githubusercontent.com/ramanverma2k/dotfiles/main/.zshrc
        dest: ~/

    - name: Installing oh-my-zsh plugins
      git:
        repo: 'https://github.com/zsh-users/{{ item }}'
        dest: ~/.oh-my-zsh/custom/plugins/{{ item }}
      loop:
        - zsh-autosuggestions
        - zsh-syntax-highlighting

    - name: Fetching Nodejs install script
      uri:
        url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh 
        return_content: yes
      register: node_install

    - name: Settings up NVM
      shell:
        cmd: zsh
        stdin: '{{ node_install.content }}'

    - name: Installing Nodejs
      shell:
        cmd: /usr/bin/zsh -ic 'nvm {{ item }}'
      loop:
        - install node
        - use node

    - name: Fetch rustup
      uri:
        url: https://sh.rustup.rs
        return_content: yes
      register: rust_installer

    - name: Run rustup installer
      shell:
        cmd: sh -s -- -y
        stdin: "{{ rust_installer.content }}"

    - name: Cloning Flutter/Dart Repository
      git:
        repo: https://github.com/flutter/flutter.git
        version: stable
        depth: 1
        dest: ~/.flutter

    - name: Adding PPA Repositories for Golang, Android Studio, VLC & Krita
      become: yes
      apt_repository:
        repo: 'ppa:{{ item }}'
        state: present
      loop:
        - longsleep/golang-backports
        - maarten-fonville/android-studio
        - kritalime/ppa
        - savoury1/ffmpeg4
        - savoury1/vlc3

    - name: Seperating gpg keys for previously added repositories into individual files
      become: yes
      shell: apt-key export {{ item.key }} | gpg --dearmour -o /etc/apt/trusted.gpg.d/{{ item.value }}.gpg
      loop:
        - { key: "56A3D45E", value: "golang-backports" }
        - { key: "DC6A13A3", value: "android-studio" }
        - { key: "01CEE17F", value: "kritalime" }
        - { key: "FB006459", value: "savoury1" }

    - name: Adding VSCode, Docker, OnlyOffice & GitHub CLI repositories
      become: yes
      shell:
        cmd: chmod +x ./setup/ubuntu/apps_repositories.sh && ./setup/ubuntu/apps_repositories.sh

    - name: Updating apt cache
      become: yes
      apt:
        update_cache: yes

    - name: Installing Packages & Apps
      become: yes
      apt:
        name:
          - android-studio
          - code
          - gh
          - clang
          - cmake
          - ninja-build
          - pkg-config
          - libgtk-3-dev
          - liblzma-dev
          - gettext
          - libtool
          - libtool-bin
          - autoconf
          - automake
          - unzip
          - curl
          - doxygen
          - clangd
          - gcc
          - g++
          - krita
          - onlyoffice-desktopeditors
          - vlc
          - fzf
          - ripgrep
          - tmux
          - libssl-dev
          - golang-go
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
          - xclip
        state: present
    
    - name: Updating remaining packages
      become: yes
      apt:
        name: '*'
        state: latest

    - name: Adding Docker to usergroup
      become: yes
      shell: usermod -aG docker "$USER" && systemctl enable docker

    - name: Installing Language Servers
      shell: /usr/bin/zsh -ic 'npm install --location=global typescript typescript-language-server yarn vscode-langservers-extracted @tailwindcss/language-server'

    - name: Installing gopls
      shell: go install golang.org/x/tools/gopls@latest

    - name: Installing LazyGit
      shell: go install github.com/jesseduffield/lazygit@latest

    - name: Installing Cargo Edit
      shell: /usr/bin/zsh -ic 'cargo install cargo-edit'

    - name: Cloning Neovim
      git:
        repo: https://github.com/neovim/neovim
        dest: ./neovim
        depth: 1
        version: stable

    - name: Building Neovim
      shell: make CMAKE_BUILD_TYPE=Release
      args:
        chdir: ./neovim/

    - name: Installing Neovim
      become: yes
      shell:  make install
      args:
        chdir: ./neovim/

    - name: Fetching configs from git
      git:
        repo: https://github.com/ramanverma2k/dotfiles
        dest: ./dotfiles

    - name: Setting up configs
      command: cp -r ./dotfiles/{{ item }} ~/.config/
      loop:
        - lazygit
        - nvim
        
    - name: Cleaning up
      shell: rm -rf neovim dotfiles

    - name: Configuring git
      shell: git config --global user.name "ramanverma2k" && git config --global user.email "ramanverma4183@gmail.com" && git config --global core.editor "nvim"
