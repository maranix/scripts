- name: Installing Programming languages & Application
  hosts: localhost
  tasks:
    - name: Fetching Nodejs install script
      uri:
        url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh 
        return_content: yes
      register: node_install

    - name: Settings up NVM
      shell:
        cmd: zsh
        stdin: '{{ node_install.content }}'

    - name: Installing Nodejs
      shell:
        cmd: /usr/bin/zsh -ic 'nvm {{ item }}'
      loop:
        - install node
        - use node

    - name: Fetch rustup
      uri:
        url: https://sh.rustup.rs
        return_content: yes
      register: rust_installer

    - name: Run rustup installer
      shell:
        cmd: sh -s -- -y
        stdin: "{{ rust_installer.content }}"

    - name: Cloning Flutter/Dart Repository
      git:
        repo: https://github.com/flutter/flutter.git
        version: stable
        depth: 1
        dest: ~/.flutter

    - name: Adding PPA Repositories for Golang, Android Studio, VLC & Krita 
      become: yes
      apt_repository:
        repo: 'ppa:{{ item }}'
        state: present
      loop:
        - longsleep/golang-backports
        - maarten-fonville/android-studio
        - kritalime/ppa
        - savoury1/ffmpeg4
        - savoury1/vlc3

    - name: Adding VSCode, Docker, OnlyOffice & GitHub CLI repositories
      become: yes
      shell:
        cmd: chmod +x ./apps_repositories.sh

    - name: Updating apt cache
      become: yes
      apt:
        update_cache: yes

    - name: Installing Packages & Apps
      become: yes
      apt:
        name:
          - android-studio
          - code
          - gh
          - clang
          - cmake
          - ninja-build
          - pkg-config
          - libgtk-3-dev
          - liblzma-dev
          - gettext
          - libtool
          - libtool-bin
          - autoconf
          - automake
          - unzip
          - curl
          - doxygen
          - clangd
          - gcc
          - g++
          - krita
          - onlyoffice-desktopeditors
          - vlc
          - fzf
          - ripgrep
          - tmux
          - libssl-dev
          - golang-go
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present

    - name: Adding Docker to usergroup
      become: yes
      shell: groupadd docker && usermod -aG docker "$USER" && systemctl enable docker

    - name: Installing Language Servers
      shell: /usr/bin/zsh -ic 'npm install --location=global typescript typescript-language-server yarn vscode-langservers-extracted @tailwindcss/language-server'

    - name: Installing gopls
      shell: go install golang.org/x/tools/gopls@latest

    - name: Installing LazyGit
      shell: go install github.com/jesseduffield/lazygit@latest

    - name: Installing Cargo Edit
      shell: cargo install cargo-edit

    - name: Cloning Neovim
      git:
        repo: https://github.com/neovim/neovim
        depth: 1
        version: stable

    - name: Building Neovim
      shell: make CMAKE_BUILD_TYPE=Release
      args:
        chdir: ./neovim/

    - name: Installing Neovim
      become: yes
      shell:  make install
      args:
        chdir: ./neovim/

    - name: "Fetching configs from git"
      git:
        repo: https://github.com/ramanverma2k/dotfiles
        dest: ./dotfiles

    - name: "Setting up configs"
      copy:
        src: ./dotfiles/{{ item }}
        dest: ~/.config/{{ item }}
      loop:
        - lazygit
        - nvim
