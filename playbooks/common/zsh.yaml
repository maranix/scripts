---
- name: ZSH Shell Playbook
  hosts: localhost
  tasks:
    - name: Registering OS ID
      ansible.builtin.command: "{{ ansible_env.SHELL }} -c \"grep '^ID=.*' /etc/os-release | sed 's/ID=//'\""
      register: os

    - name: Register current user (workaround to change default shell)
      ansible.builtin.command: whoami
      changed_when: false
      register: current_user

    - name: Installing ZSH on fedora
      become: true
      ansible.builtin.dnf:
        name: zsh
      when: os.stdout == "fedora"

    - name: Installing ZSH on ubuntu
      become: true
      ansible.builtin.apt:
        name: zsh
      when: os.stdout == "ubuntu" or os.stdout == "pop"

    - name: Checking if oh-my-zsh exists
      ansible.builtin.stat: path=~/.oh-my-zsh
      register: omz

    - name: Fetching oh-my-zsh installer script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: /tmp/omz.sh
        mode: 0755
      when: not omz.stat.exists

    - name: Installing oh-my-zsh
      ansible.builtin.script: /tmp/omz.sh
      args:
        creates: ~/.oh-my-zsh
      when: not omz.stat.exists
      register: omz_install

    - name: Checking if zplug exists
      ansible.builtin.stat: path=~/.zplug
      register: zplug

    - name: Fetching zplug installer script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/zplug/installer/master/installer.zsh
        dest: /tmp/zplug.sh
        mode: 0755
      when: not zplug.stat.exists

    - name: Installing zplug
      ansible.builtin.script: /tmp/zplug.sh
      args:
        creates: ~/.zplug
      when: not zplug.stat.exists
      register: zplug_install

    - name: Changing default shell to zsh
      become: true
      ansible.builtin.command: "{{ ansible_env.SHELL }} -c \"chsh -s $(which zsh) {{ current_user.stdout }}\""
      changed_when: false

    - name: Cleaning up
      ansible.builtin.file:
        path: /tmp/{{ item }}
        state: absent
      loop:
        - omz.sh
        - zplug.sh
      when: not omz_install is skipped and not omz_install is failed and not zplug_install is skipped and not zplug_install is failed
