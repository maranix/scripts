---
- name: Android Studio Playbook
  hosts: localhost
  tasks:
    - name: Registering OS ID
      ansible.builtin.command: "{{ ansible_env.SHELL }} -c \"grep '^ID=.*' /etc/os-release | sed 's/ID=//'\""
      register: os

    - name: Checking if Android Studio is installed
      ansible.builtin.stat:
        path="{{ ansible_env.HOME }}/.local/bin/android-studio"
      register: studio

    - name: Fetching details
      ansible.builtin.get_url:
        url: https://developer.android.com/studio
        dest: /tmp/android-studio.html
        mode: 0755
      when: not studio.stat.exists

    - name: Extracting archive details
      ansible.builtin.command:
        cmd: grep -Pom1 '(https:\/\/.*android-studio.*linux.tar.gz)' /tmp/android-studio.html
      changed_when: false
      register: archive
      when: not studio.stat.exists

    - name: Fetching {{ archive.stdout }}
      ansible.builtin.get_url:
        url: "{{ archive.stdout }}"
        dest: /tmp/android-studio.tar.gz
        mode: 0755
      when: not studio.stat.exists

    - name: Unpacking archive to ~/.local/bin/android-studio
      ansible.builtin.unarchive:
        src: /tmp/android-studio.tar.gz
        dest: "{{ ansible_env.HOME }}/.local/bin/"
        mode: 0755
        creates: "{{ ansible_env.HOME }}/.local/bin/android-studio"
      when: not studio.stat.exists
      register: install

    - name: Installing dependencies for ubuntu
      ansible.builtin.apt:
        name:
          - libc6:i386
          - libncurses5:i386
          - libstdc++6:i386
          - lib32z1
          - libbz2-1.0:i386
      when: os.stdout == "ubuntu"

    - name: Installing dependencies for fedora
      ansible.builtin.dnf:
        name:
          - zlib.i686
          - ncurses-libs.i686
          - bzip2-lib.i686
      when: os.stdout == "fedora"

    - name: Cleaning up
      ansible.builtin.file:
        path: /tmp/android-studio.tar.gz
        state: absent
      when: not install is skipped and not install is failed
